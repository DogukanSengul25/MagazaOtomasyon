<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>